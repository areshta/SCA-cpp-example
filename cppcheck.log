Checking source/sca_cpp.cpp ...
source/sca_cpp.cpp:134: style: Condition '!(42<0)' is always true
            if( i || !(42 < 0) )     // issue 28 , line 134 : no sense always true under if,
                     ^
source/sca_cpp.cpp:134: style: Condition '42<0' is always false
            if( i || !(42 < 0) )     // issue 28 , line 134 : no sense always true under if,
                          ^
source/sca_cpp.cpp:42: style: Variable 'pB' is assigned a value that is never used.
        int64_t* pB = new int64_t[10];     // issue 3 , line 42 : local pB hides member pB; pB member is not initialized
^
source/sca_cpp.cpp:131: style: Variable 'a' is not assigned a value.
        int a[10]; // issue 27 , line 131 : Variable 'a' is not assigned a value.
            ^
source/sca_cpp.cpp:82: error: Buffer is accessed out of bounds.
        (void)strcpy(pString,str);         // issue 18 , line 82 : using of strcpy is danger
              ^
source/sca_cpp.cpp:40: warning: Member variable 'baseA::pB' is not initialized in the constructor.
    baseA() // issue 2 , line 40 : initialisation of members must be placed in initialisation list
    ^
source/sca_cpp.cpp:78: warning: Member variable 'childB::a' is not initialized in the constructor.
    childB() // issue 15 , line 78 : Member variable 'childB::a' is not initialized in the constructor
    ^
source/sca_cpp.cpp:127: warning: Member variable 'SimplyCreazy::pNonIni' is not initialized in the constructor.
    SimplyCreazy(): pZero(0) {}    // issue 26 , line 127 : Member variable 'SimplyCreazy::pNonIni' is not initialized in the constructor
    ^
source/sca_cpp.cpp:52: error: Class 'baseA' which is inherited by class 'childB' does not have a virtual destructor.
    ~baseA()                            // issue 7 , line 52 : must be virtual ~baseA()
     ^
source/sca_cpp.cpp:43: style: Class 'baseA' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).
        pA = new int64_t[10];           // issue 4 , line 43 : Class 'baseA' does not have a copy constructor and operator=
        ^
source/sca_cpp.cpp:43: style: Class 'baseA' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s).
        pA = new int64_t[10];           // issue 4 , line 43 : Class 'baseA' does not have a copy constructor and operator=
        ^
source/sca_cpp.cpp:81: style: Class 'childB' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s).
        pString = new char[strlen(str)]; // issue 17 , line 81 : Must be 'strlen(str)+1'
        ^
source/sca_cpp.cpp:81: style: Class 'childB' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s).
        pString = new char[strlen(str)]; // issue 17 , line 81 : Must be 'strlen(str)+1'
        ^
source/sca_cpp.cpp:50: error: Memory leak: pB
    }                                     // issue 6 , line 50 : unused pB, memory leaks
    ^
source/sca_cpp.cpp:55: error: Mismatching allocation and deallocation: baseA::pA
        delete pA;                         // issue 8 , line 55 : must be 'delete[]';
        ^
source/sca_cpp.cpp:57: error: Mismatching allocation and deallocation: baseA::pC
        delete[] pC;                     // issue 10 , line 57 : must be 'delete pC';
        ^
source/sca_cpp.cpp:70: style: Class 'baseA' is unsafe, 'baseA::pD' can leak by wrong usage.
    int64_t *pD; // issue 13 , line 70 : Class 'baseA' is unsafe, 'baseA::pD' can leak by wrong usage.
             ^
source/sca_cpp.cpp:148: warning: Ineffective statement similar to '*A++;'. Did you intend to write '(*A)++;'?
        *pZero++;                     // issue 34 , line 148 : non-using result of operation (* - no sense, unused), error 22: using nul point64_ter
              ^
source/sca_cpp.cpp:155: performance: Function parameter 's' should be passed by const reference.
    void PassStringAsValue(string s) // issue 36 , line 155 : bad string transfer. Must be PassStringAsValue(const string& s)
^
source/sca_cpp.cpp:63: error: Dangerous usage of c_str(). The value returned by c_str() is invalid after this call.
        return a.c_str(); // issue 12 , line 63 : return the point64_ter that point64_ts inside local variable
        ^
source/sca_cpp.cpp:137: error: Uninitialized variable: a
                cout << "a[i] = " << a[i] << endl;  // issue 30 , line 137 : access to non-init array, error 31: using signed index (size_t could be used)
                                     ^
nofile:0: information: Cppcheck cannot find all the include files (use --check-config for details)

